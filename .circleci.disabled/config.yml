# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2.1

orbs:
  docker: ledger/docker@volatile
  codecov: codecov/codecov@1.0.2
  slack: circleci/slack@4.0.0

aliases:
  - &filters_docker_build_and_publish
    branches:
      only:
        - master
    tags:
      only: /.*/
  - &restore_docker_cache
    keys:
      - lama-docker-cache-{{ .Branch }}-{{ checksum "build.sbt" }}
      - lama-docker-cache-{{ .Branch }}
      - lama-docker-cache-
  - &save_docker_cache
    key: lama-docker-cache-{{ .Branch }}-{{ checksum "build.sbt" }}
    paths:
      - .ivy2
      - .sbt
      - project/target
      - account-manager/target
      - service/target
      - coins/bitcoin/common/target
      - coins/bitcoin/worker/target
      - coins/bitcoin/interpreter/target

commands:
  after_checkout_lama:
    description: "Checkout submodules and restore docker cache"
    steps:
      - run:
          name: "Pull submodules"
          command: |
            git submodule init
            git submodule update
      - restore_cache: *restore_docker_cache

  slack_notify_on_fail:
    description: "Notify Slack when a job has failed"
    steps:
      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Your job *${CIRCLE_JOB}* has failed ⚠️ "
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Commiter*:\\n${CIRCLE_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*BRANCH*:\\n${CIRCLE_BRANCH}"
                    }
                  ],
                  "accessory": {
                    "type": "image",
                    "image_url": "https://i.pinimg.com/originals/2a/3f/b7/2a3fb7f5906b0f8d0538507de476c482.jpg",
                    "alt_text": "A sad llama"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View PR"
                      },
                      "url": "${CIRCLE_PULL_REQUEST}"
                    }
                  ]
                }
              ]
            }

  slack_notify_on_pass:
    description: "Notify Slack when a job has passed"
    parameters:
      image:
        type: string
    steps:
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Your job *${CIRCLE_JOB}* passed :tada:"
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Commiter*:\\n${CIRCLE_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*BRANCH*:\\n${CIRCLE_BRANCH}"
                    }
                  ],
                  "accessory": {
                    "type": "image",
                    "image_url": "<< parameters.image >>",
                    "alt_text": "Swag Lama"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View PR"
                      },
                      "url": "${CIRCLE_PULL_REQUEST}"
                    }
                  ]
                }
              ]
            }

parameters:
  sbt:
    type: string
    default: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt

jobs:
  compile:
    docker:
      - image: circleci/openjdk:14.0.2-jdk-buster
        environment:
          JVM_OPTS: -Xmx3200m
          TERM: dumb
    steps:
      - checkout
      - after_checkout_lama
      - run:
          name: Compile
          command: << pipeline.parameters.sbt >> compile test:compile it:compile
      - save_cache: *save_docker_cache
      - slack_notify_on_fail

  scala_linter:
    docker:
      - image: circleci/openjdk:14.0.2-jdk-buster
    steps:
      - checkout
      - after_checkout_lama
      - run:
          name: Run scalastyle
          command: << pipeline.parameters.sbt >> scalastyle
      - slack_notify_on_fail

  unit_tests:
    docker:
      - image: circleci/openjdk:14.0.2-jdk-buster
        environment:
          JVM_OPTS: -Xmx3200m
          TERM: dumb
    steps:
      - checkout
      - after_checkout_lama
      - run:
          name: Run common unit tests
          command: << pipeline.parameters.sbt >> common/test
      - run:
          name: Run account manager unit tests
          command: << pipeline.parameters.sbt >> accountManager/test
      - run:
          name: Run service unit tests
          command: << pipeline.parameters.sbt >> service/test
      - run:
          name: Run bitcoin worker unit tests
          command: << pipeline.parameters.sbt >> bitcoinWorker/test
      - run:
          name: Run bitcoin interpreter unit tests
          command: << pipeline.parameters.sbt >> bitcoinInterpreter/test
      - slack_notify_on_fail
      - slack_notify_on_pass:
          image: "https://i.ytimg.com/vi/5mQO6tCZp6g/hqdefault.jpg"

  it_tests:
    environment:
      POSTGRES_DB: lama
      POSTGRES_USER: lama
      POSTGRES_PASSWORD: serge
      ACCOUNT_MANAGER_JDBC_URL: jdbc:postgresql:test_lama
      BITCOIN_INTERPRETER_JDBC_URL: jdbc:postgresql:test_lama_btc
    docker:
      - image: circleci/openjdk:14.0.2-jdk-buster
        environment:
          JVM_OPTS: -Xmx3200m
          TERM: dumb
      - image: circleci/postgres:12
        environment:
          POSTGRES_DB: lama
          POSTGRES_USER: lama
          POSTGRES_PASSWORD: serge
      - image: circleci/redis:6.0.6-alpine
      - image: rabbitmq:3.8.5
        environment:
          RABBITMQ_DEFAULT_USER: lama
          RABBITMQ_DEFAULT_PASS: serge
      - image: ledgerhq/bitcoin-svc:latest
      - image: ledgerhq/bitcoin-keychain-svc:latest
        environment:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_DB: 1
    steps:
      - checkout
      - after_checkout_lama
      - run:
          name: Install postgresql-client
          command: sudo apt update && sudo apt install -y postgresql-client
      - run:
          name: Create dbs
          command: |
            createdb -h localhost -p 5432 -w -U $POSTGRES_USER lama_btc
            createdb -h localhost -p 5432 -w -U $POSTGRES_USER test_lama
            createdb -h localhost -p 5432 -w -U $POSTGRES_USER test_lama_btc
      - run:
          name: Run account manager it tests
          command: << pipeline.parameters.sbt >> accountManager/it:test
      - run:
          name: Run bitcoin worker it tests
          command: << pipeline.parameters.sbt >> bitcoinWorker/it:test
      - run:
          name: Run bitcoin interpreter it tests
          command: << pipeline.parameters.sbt >> bitcoinInterpreter/it:test
      - slack_notify_on_fail
      - slack_notify_on_pass:
          image: "https://steamuserimages-a.akamaihd.net/ugc/424818087605857300/CF9AF70E0CD2812635DF40B32061A02AE339C218/"

  e2e_tests:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: large
    steps:
      - checkout
      - after_checkout_lama
      - run:
          name: Build and publish lama images locally
          command: |
            sbt assembly
            sbt docker
      - run:
          name: Run dockerized lama components
          command: docker-compose up -d
      - run:
          name: Waiting for GRPC servers to be up
          command: |
            apt-get update && apt-get install -y wget
            wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz \
                && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz \
                && rm dockerize-linux-amd64-v0.6.1.tar.gz
            dockerize -wait http://localhost:8080/health -timeout 120s
      - run:
          name: Run e2e tests
          command: sbt service/it:test
      - slack_notify_on_fail
      - slack_notify_on_pass:
          image: "https://thumbs.dreamstime.com/b/dancing-llama-sunglasses-vector-illustration-eps-dancing-llama-sunglasses-116736736.jpg"

workflows:
  version: 2.1
  build_test_and_publish:
    jobs:
      - compile
      - scala_linter

      - unit_tests:
          requires:
            - compile
            - scala_linter
      - it_tests:
          requires:
            - compile
            - scala_linter
      - e2e_tests:
          requires:
            - compile
            - scala_linter

      - docker/build_image:
          name: build-lama-account-manager-image
          requires:
            - unit_tests
            - it_tests
            - e2e_tests
          docker_build_target: account-manager/target/docker
          docker_project_name: lama-account-manager
          after_checkout:
            - after_checkout_lama
            - run:
                command: |
                  << pipeline.parameters.sbt >> accountManager/assembly
                  << pipeline.parameters.sbt >> accountManager/docker
          filters:
            *filters_docker_build_and_publish
      - docker/publish_image:
          name: publish-lama-account-manager-image
          requires:
            - build-lama-account-manager-image
          docker_project_name: lama-account-manager
          filters:
            *filters_docker_build_and_publish

      - docker/build_image:
          name: build-lama-service-image
          requires:
            - unit_tests
            - it_tests
            - e2e_tests
          docker_build_target: service/target/docker
          docker_project_name: lama-service
          after_checkout:
            - after_checkout_lama
            - run:
                command: |
                  << pipeline.parameters.sbt >> service/assembly
                  << pipeline.parameters.sbt >> service/docker
          filters:
            *filters_docker_build_and_publish
      - docker/publish_image:
          name: publish-lama-service-image
          requires:
            - build-lama-service-image
          docker_project_name: lama-service
          filters:
            *filters_docker_build_and_publish

      - docker/build_image:
          name: build-lama-bitcoin-worker-image
          requires:
            - unit_tests
            - it_tests
            - e2e_tests
          docker_build_target: coins/bitcoin/worker/target/docker
          docker_project_name: lama-bitcoin-worker
          after_checkout:
            - after_checkout_lama
            - run:
                command: |
                  << pipeline.parameters.sbt >> bitcoinWorker/assembly
                  << pipeline.parameters.sbt >> bitcoinWorker/docker
          filters:
            *filters_docker_build_and_publish
      - docker/publish_image:
          name: publish-lama-bitcoin-worker-image
          requires:
            - build-lama-bitcoin-worker-image
          docker_project_name: lama-bitcoin-worker
          filters:
            *filters_docker_build_and_publish

      - docker/build_image:
          name: build-lama-bitcoin-interpreter-image
          requires:
            - unit_tests
            - it_tests
            - e2e_tests
          docker_build_target: coins/bitcoin/interpreter/target/docker
          docker_project_name: lama-bitcoin-interpreter
          after_checkout:
            - after_checkout_lama
            - run:
                command: |
                  << pipeline.parameters.sbt >> bitcoinInterpreter/assembly
                  << pipeline.parameters.sbt >> bitcoinInterpreter/docker
          filters:
            *filters_docker_build_and_publish
      - docker/publish_image:
          name: publish-lama-bitcoin-interpreter-image
          requires:
            - build-lama-bitcoin-interpreter-image
          docker_project_name: lama-bitcoin-interpreter
          filters:
            *filters_docker_build_and_publish
